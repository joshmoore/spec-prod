name: W3C Deploy
author: "Sid Vishnoi"
description: "Build ReSpec/Bikeshed specs, validate output and publish to w3.org or GitHub pages"

inputs:
  type:
    description: Possible values - 'respec', 'bikeshed'
  source:
    description: Source file path.
  validateLinks:
    description: Validate hyperlinks
    default: true
  validateMarkup:
    description: Validate markup
    default: true
  ghPages:
    description: Provide a branch name (default "gh-pages") to deploy to GitHub pages. Set to false to not deploy.
    default: "gh-pages"
  # Related to W3C Deployment using Echidna
  ECHIDNA_TOKEN:
    description: Echidna token
  echidnaManifestURL:
    description: Echidna manifest URL
  wgDecisionURL:
    description: A URL to the working group decision to use auto-publish (usually from a w3c mailing list).
  w3cNotificationEmails:
    description: Comma separated list of email addresses to CC

runs:
  using: composite
  steps:
    - name: Prepare
      id: prepare
      run: |
        echo "::group::Prepare"
        node ${{ github.action_path }}/src/prepare.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_USER: ${{ toJSON(inputs) }}
        INPUTS_GITHUB: ${{ toJSON(github) }}

    - name: Setup toolchain
      run: |
        echo "::group::Setup toolchain"
        ${{ github.action_path }}/src/setup.sh
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_TYPE: ${{ fromJson(steps.prepare.outputs.all).type }}
        HOME: /home/runner

    - name: Generate Static HTML
      id: generate-html
      run: |
        echo "::group::Generate Static HTML"
        node ${{ github.action_path }}/src/build.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_TYPE: ${{ fromJson(steps.prepare.outputs.all).type }}
        INPUTS_SOURCE: ${{ fromJson(steps.prepare.outputs.all).source }}

    - name: Validate hyperlinks
      run: |
        echo "::group::Validate hyperlinks"
        node ${{ github.action_path }}/src/validate/links.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_VALIDATE_LINKS: ${{ fromJson(steps.prepare.outputs.all).validate.links }}
        OUTPUT_FILE: ${{ steps.generate-html.outputs.output }}

    - name: Validate markup
      run: |
        echo "::group::Validate markup"
        node ${{ github.action_path }}/src/validate/markup.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_VALIDATE_MARKUP: ${{ fromJson(steps.prepare.outputs.all).validate.markup }}
        OUTPUT_FILE: ${{ steps.generate-html.outputs.output }}

    - name: Deploy to GitHub pages
      run: |
        echo "::group::Deploy to GitHub pages"
        node ${{ github.action_path }}/src/deploy/gh-pages.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_DEPLOY: ${{ toJson(fromJson(steps.prepare.outputs.all).deploy.ghPages) }}
        INPUTS_SOURCE: ${{ fromJson(steps.prepare.outputs.all).source }}
        OUTPUT_FILE: ${{ steps.generate-html.outputs.output }}

    - name: Deploy to W3C
      run: |
        echo "::group::Deploy to W3C"
        node ${{ github.action_path }}/src/deploy/w3c-echidna.js
        echo "::endgroup::"
      shell: bash
      env:
        INPUTS_DEPLOY: ${{ toJson(fromJson(steps.prepare.outputs.all).deploy.w3c) }}
